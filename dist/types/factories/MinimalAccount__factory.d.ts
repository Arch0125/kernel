import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MinimalAccount, MinimalAccountInterface } from "../MinimalAccount";
type MinimalAccountConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class MinimalAccount__factory extends ContractFactory {
    constructor(...args: MinimalAccountConstructorParams);
    deploy(_entryPoint: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<MinimalAccount>;
    getDeployTransaction(_entryPoint: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): MinimalAccount;
    connect(signer: Signer): MinimalAccount__factory;
    static readonly bytecode = "0x60a06040523480156200001157600080fd5b50604051620021c7380380620021c7833981810160405281019062000037919062000186565b808073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505060016200007e620000c760201b60201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200022c565b60008060017f439ffe7df606b78489639bc0b827913bd09e1246fa6802968a5b3694c53e0dd960001c620000fc9190620001f1565b60001b90508091505090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200013a826200010d565b9050919050565b60006200014e826200012d565b9050919050565b620001608162000141565b81146200016c57600080fd5b50565b600081519050620001808162000155565b92915050565b6000602082840312156200019f576200019e62000108565b5b6000620001af848285016200016f565b91505092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620001fe82620001b8565b91506200020b83620001b8565b9250828203905081811115620002265762000225620001c2565b5b92915050565b608051611f5c6200026b60003960008181610439015281816105d2015281816107f6015281816109dd01528181610b020152610bba0152611f5c6000f3fe6080604052600436106100ab5760003560e01c8063b0d691fe11610064578063b0d691fe146101eb578063bc197c8114610216578063c4d66de814610253578063d087d2881461027c578063f23a6e61146102a7578063f2fde38b146102e4576100b2565b8063150b7a02146100b75780631626ba7e146100f45780633659cfe6146101315780633a871cdd1461015a578063893d20e814610197578063940d3c60146101c2576100b2565b366100b257005b600080fd5b3480156100c357600080fd5b506100de60048036038101906100d991906111d4565b61030d565b6040516100eb9190611297565b60405180910390f35b34801561010057600080fd5b5061011b60048036038101906101169190611429565b610322565b6040516101289190611297565b60405180910390f35b34801561013d57600080fd5b5061015860048036038101906101539190611485565b610437565b005b34801561016657600080fd5b50610181600480360381019061017c91906114d7565b6105ce565b60405161018e9190611555565b60405180910390f35b3480156101a357600080fd5b506101ac6107c1565b6040516101b9919061157f565b60405180910390f35b3480156101ce57600080fd5b506101e960048036038101906101e491906115bf565b6107f4565b005b3480156101f757600080fd5b506102006109db565b60405161020d91906116a6565b60405180910390f35b34801561022257600080fd5b5061023d60048036038101906102389190611717565b6109ff565b60405161024a9190611297565b60405180910390f35b34801561025f57600080fd5b5061027a60048036038101906102759190611485565b610a17565b005b34801561028857600080fd5b50610291610afe565b60405161029e9190611555565b60405180910390f35b3480156102b357600080fd5b506102ce60048036038101906102c991906117f3565b610ba2565b6040516102db9190611297565b60405180910390f35b3480156102f057600080fd5b5061030b60048036038101906103069190611485565b610bb8565b005b600063150b7a0260e01b905095945050505050565b60008061032d610d2a565b90506103398484610d69565b73ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361039f57631626ba7e60e01b915050610431565b60006103aa85610d90565b905060006103b88286610d69565b90508073ffffffffffffffffffffffffffffffffffffffff168360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361042357631626ba7e60e01b9350505050610431565b63ffffffff60e01b93505050505b92915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806104e75750610494610d2a565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b8061051d57503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61055c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055390611910565b60405180910390fd5b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b90508181558173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461065e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106559061197c565b60405180910390fd5b600061066984610d90565b905060006106ca828780610140019061068291906119ab565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610d69565b905060006106d6610d2a565b90508173ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461073b57600193505050506107ba565b60008511156107b25760003373ffffffffffffffffffffffffffffffffffffffff168660405161076a90611a3f565b60006040518083038185875af1925050503d80600081146107a7576040519150601f19603f3d011682016040523d82523d6000602084013e6107ac565b606091505b50509050505b600093505050505b9392505050565b60006107cb610d2a565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806108a45750610851610d2a565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6108e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108da90611ac6565b60405180910390fd5b600060606001808111156108fa576108f9611ae6565b5b83600181111561090d5761090c611ae6565b5b0361096d576109608786868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610dc0565b80925081935050506109c5565b6109bc878787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610df6565b80925081935050505b816109d257805160208201fd5b50505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600063bc197c8160e01b905098975050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff16610a37610d2a565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ab1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa890611b61565b60405180910390fd5b80610aba610d2a565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166335567e1a3060006040518363ffffffff1660e01b8152600401610b5c929190611be0565b602060405180830381865afa158015610b79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9d9190611c1e565b905090565b600063f23a6e6160e01b90509695505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610c685750610c15610d2a565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b80610c9e57503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610cdd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd490611910565b60405180910390fd5b80610ce6610d2a565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060017f439ffe7df606b78489639bc0b827913bd09e1246fa6802968a5b3694c53e0dd960001c610d5d9190611c7a565b60001b90508091505090565b6000806000610d788585610e2e565b91509150610d8581610e7f565b819250505092915050565b600081604051602001610da39190611d26565b604051602081830303815290604052805190602001209050919050565b60006060600080845160208601875af491503d604051602082018101604052818152816000602083013e80925050509250929050565b6000606060008084516020860187895af191503d604051602082018101604052818152816000602083013e8092505050935093915050565b6000806041835103610e6f5760008060006020860151925060408601519150606086015160001a9050610e6387828585610fe5565b94509450505050610e78565b60006002915091505b9250929050565b60006004811115610e9357610e92611ae6565b5b816004811115610ea657610ea5611ae6565b5b0315610fe25760016004811115610ec057610ebf611ae6565b5b816004811115610ed357610ed2611ae6565b5b03610f13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0a90611d98565b60405180910390fd5b60026004811115610f2757610f26611ae6565b5b816004811115610f3a57610f39611ae6565b5b03610f7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7190611e04565b60405180910390fd5b60036004811115610f8e57610f8d611ae6565b5b816004811115610fa157610fa0611ae6565b5b03610fe1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd890611e96565b60405180910390fd5b5b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c11156110205760006003915091506110be565b6000600187878787604051600081526020016040526040516110459493929190611ee1565b6020604051602081039080840390855afa158015611067573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110b5576000600192509250506110be565b80600092509250505b94509492505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611106826110db565b9050919050565b611116816110fb565b811461112157600080fd5b50565b6000813590506111338161110d565b92915050565b6000819050919050565b61114c81611139565b811461115757600080fd5b50565b60008135905061116981611143565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126111945761119361116f565b5b8235905067ffffffffffffffff8111156111b1576111b0611174565b5b6020830191508360018202830111156111cd576111cc611179565b5b9250929050565b6000806000806000608086880312156111f0576111ef6110d1565b5b60006111fe88828901611124565b955050602061120f88828901611124565b94505060406112208882890161115a565b935050606086013567ffffffffffffffff811115611241576112406110d6565b5b61124d8882890161117e565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6112918161125c565b82525050565b60006020820190506112ac6000830184611288565b92915050565b6000819050919050565b6112c5816112b2565b81146112d057600080fd5b50565b6000813590506112e2816112bc565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611336826112ed565b810181811067ffffffffffffffff82111715611355576113546112fe565b5b80604052505050565b60006113686110c7565b9050611374828261132d565b919050565b600067ffffffffffffffff821115611394576113936112fe565b5b61139d826112ed565b9050602081019050919050565b82818337600083830152505050565b60006113cc6113c784611379565b61135e565b9050828152602081018484840111156113e8576113e76112e8565b5b6113f38482856113aa565b509392505050565b600082601f8301126114105761140f61116f565b5b81356114208482602086016113b9565b91505092915050565b600080604083850312156114405761143f6110d1565b5b600061144e858286016112d3565b925050602083013567ffffffffffffffff81111561146f5761146e6110d6565b5b61147b858286016113fb565b9150509250929050565b60006020828403121561149b5761149a6110d1565b5b60006114a984828501611124565b91505092915050565b600080fd5b600061016082840312156114ce576114cd6114b2565b5b81905092915050565b6000806000606084860312156114f0576114ef6110d1565b5b600084013567ffffffffffffffff81111561150e5761150d6110d6565b5b61151a868287016114b7565b935050602061152b868287016112d3565b925050604061153c8682870161115a565b9150509250925092565b61154f81611139565b82525050565b600060208201905061156a6000830184611546565b92915050565b611579816110fb565b82525050565b60006020820190506115946000830184611570565b92915050565b600281106115a757600080fd5b50565b6000813590506115b98161159a565b92915050565b6000806000806000608086880312156115db576115da6110d1565b5b60006115e988828901611124565b95505060206115fa8882890161115a565b945050604086013567ffffffffffffffff81111561161b5761161a6110d6565b5b6116278882890161117e565b9350935050606061163a888289016115aa565b9150509295509295909350565b6000819050919050565b600061166c611667611662846110db565b611647565b6110db565b9050919050565b600061167e82611651565b9050919050565b600061169082611673565b9050919050565b6116a081611685565b82525050565b60006020820190506116bb6000830184611697565b92915050565b60008083601f8401126116d7576116d661116f565b5b8235905067ffffffffffffffff8111156116f4576116f3611174565b5b6020830191508360208202830111156117105761170f611179565b5b9250929050565b60008060008060008060008060a0898b031215611737576117366110d1565b5b60006117458b828c01611124565b98505060206117568b828c01611124565b975050604089013567ffffffffffffffff811115611777576117766110d6565b5b6117838b828c016116c1565b9650965050606089013567ffffffffffffffff8111156117a6576117a56110d6565b5b6117b28b828c016116c1565b9450945050608089013567ffffffffffffffff8111156117d5576117d46110d6565b5b6117e18b828c0161117e565b92509250509295985092959890939650565b60008060008060008060a087890312156118105761180f6110d1565b5b600061181e89828a01611124565b965050602061182f89828a01611124565b955050604061184089828a0161115a565b945050606061185189828a0161115a565b935050608087013567ffffffffffffffff811115611872576118716110d6565b5b61187e89828a0161117e565b92509250509295509295509295565b600082825260208201905092915050565b7f6163636f756e743a206e6f742066726f6d20656e747279706f696e74206f722060008201527f6f776e6572206f722073656c6600000000000000000000000000000000000000602082015250565b60006118fa602d8361188d565b91506119058261189e565b604082019050919050565b60006020820190508181036000830152611929816118ed565b9050919050565b7f6163636f756e743a206e6f742066726f6d20656e747279706f696e7400000000600082015250565b6000611966601c8361188d565b915061197182611930565b602082019050919050565b6000602082019050818103600083015261199581611959565b9050919050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126119c8576119c761199c565b5b80840192508235915067ffffffffffffffff8211156119ea576119e96119a1565b5b602083019250600182023603831315611a0657611a056119a6565b5b509250929050565b600081905092915050565b50565b6000611a29600083611a0e565b9150611a3482611a19565b600082019050919050565b6000611a4a82611a1c565b9150819050919050565b7f6163636f756e743a206e6f742066726f6d20656e747279706f696e74206f722060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611ab060258361188d565b9150611abb82611a54565b604082019050919050565b60006020820190508181036000830152611adf81611aa3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f416c726561647920696e697469616c697a656400000000000000000000000000600082015250565b6000611b4b60138361188d565b9150611b5682611b15565b602082019050919050565b60006020820190508181036000830152611b7a81611b3e565b9050919050565b6000819050919050565b600077ffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611bca611bc5611bc084611b81565b611647565b611b8b565b9050919050565b611bda81611baf565b82525050565b6000604082019050611bf56000830185611570565b611c026020830184611bd1565b9392505050565b600081519050611c1881611143565b92915050565b600060208284031215611c3457611c336110d1565b5b6000611c4284828501611c09565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c8582611139565b9150611c9083611139565b9250828203905081811115611ca857611ca7611c4b565b5b92915050565b600081905092915050565b7f19457468657265756d205369676e6564204d6573736167653a0a333200000000600082015250565b6000611cef601c83611cae565b9150611cfa82611cb9565b601c82019050919050565b6000819050919050565b611d20611d1b826112b2565b611d05565b82525050565b6000611d3182611ce2565b9150611d3d8284611d0f565b60208201915081905092915050565b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b6000611d8260188361188d565b9150611d8d82611d4c565b602082019050919050565b60006020820190508181036000830152611db181611d75565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b6000611dee601f8361188d565b9150611df982611db8565b602082019050919050565b60006020820190508181036000830152611e1d81611de1565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b6000611e8060228361188d565b9150611e8b82611e24565b604082019050919050565b60006020820190508181036000830152611eaf81611e73565b9050919050565b611ebf816112b2565b82525050565b600060ff82169050919050565b611edb81611ec5565b82525050565b6000608082019050611ef66000830187611eb6565b611f036020830186611ed2565b611f106040830185611eb6565b611f1d6060830184611eb6565b9594505050505056fea26469706673582212200cf0573c851d24bf35a4767572787c93ddb6a64589fc97e4c2a68ab1451cd30564736f6c63430008120033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IEntryPoint";
            readonly name: "_entryPoint";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidNonce";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newImplementation";
            readonly type: "address";
        }];
        readonly name: "Upgraded";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "entryPoint";
        readonly outputs: readonly [{
            readonly internalType: "contract IEntryPoint";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }, {
            readonly internalType: "enum Operation";
            readonly name: "operation";
            readonly type: "uint8";
        }];
        readonly name: "executeAndRevert";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getNonce";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getOwner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_owner";
            readonly type: "address";
        }];
        readonly name: "initialize";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_hash";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "_signature";
            readonly type: "bytes";
        }];
        readonly name: "isValidSignature";
        readonly outputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "";
            readonly type: "bytes4";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "uint256[]";
            readonly name: "";
            readonly type: "uint256[]";
        }, {
            readonly internalType: "uint256[]";
            readonly name: "";
            readonly type: "uint256[]";
        }, {
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly name: "onERC1155BatchReceived";
        readonly outputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "";
            readonly type: "bytes4";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly name: "onERC1155Received";
        readonly outputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "";
            readonly type: "bytes4";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly name: "onERC721Received";
        readonly outputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "";
            readonly type: "bytes4";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_newImplementation";
            readonly type: "address";
        }];
        readonly name: "upgradeTo";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "nonce";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "initCode";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "uint256";
                readonly name: "callGasLimit";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "verificationGasLimit";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "preVerificationGas";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "maxFeePerGas";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "maxPriorityFeePerGas";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "paymasterAndData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "signature";
                readonly type: "bytes";
            }];
            readonly internalType: "struct UserOperation";
            readonly name: "userOp";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes32";
            readonly name: "userOpHash";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "missingFunds";
            readonly type: "uint256";
        }];
        readonly name: "validateUserOp";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly stateMutability: "payable";
        readonly type: "receive";
    }];
    static createInterface(): MinimalAccountInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): MinimalAccount;
}
export {};
